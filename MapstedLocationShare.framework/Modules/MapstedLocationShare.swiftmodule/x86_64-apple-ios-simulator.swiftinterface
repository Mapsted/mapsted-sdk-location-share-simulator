// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name MapstedLocationShare
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import DeveloperToolsSupport
import Foundation
import MapstedCore
@_exported import MapstedLocationShare
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol LocationShareControllerInterface {
  func addShareLiveLocationChangeListener(listener: any MapstedLocationShare.ShareLiveLocationListener)
  func removeShareLiveLocationChangeListener(listener: any MapstedLocationShare.ShareLiveLocationListener)
  func startLocationShareUpdates(propertyId: Swift.Int, position: MapstedCore.MNPosition, completion: @escaping (MapstedLocationShare.ShareLiveLocationResponse?) -> ())
  func stopLocationShareUpdates()
  func isShareLiveLocationEnabled() -> Swift.Bool
  func bringTopBarViewToFront()
}
public protocol LocationShareInterface {
  func showLiveLocationBar()
  func hideLiveLocationBar()
}
@objc public protocol ShareLiveLocationListener {
  @objc func onShareLiveLocationEnabled(enabled: Swift.Bool)
}
public class ShareLiveLocationResponse : Swift.Codable {
  final public let success: Swift.Bool
  final public let url: Swift.String?
  final public let id: Swift.String?
  final public let error: Swift.String?
  public init(success: Swift.Bool, url: Swift.String?, id: Swift.String?, error: Swift.String?)
  required public init(from decoder: any Swift.Decoder) throws
  public func encode(to encoder: any Swift.Encoder) throws
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class LocationShareApi {
  public static let location: any MapstedLocationShare.LocationShareControllerInterface
  @objc deinit
}
public class UpdateLiveLocationResponse : Swift.Codable {
  final public let success: Swift.Bool
  final public let error: Swift.String?
  public init(success: Swift.Bool, error: Swift.String?)
  required public init(from decoder: any Swift.Decoder) throws
  public func encode(to encoder: any Swift.Encoder) throws
  @objc deinit
}
